version: '2.3'

services:
  postgres-db:
      build:
          context: ..
          dockerfile: dockerfiles/postgres.dockerfile
      volumes:
          - postgres-volume:/docker-entrypoint-initdb.d
      restart: unless-stopped
      
      environment:
          - POSTGRES_USER=test
          - POSTGRES_PASSWORD=test
          - POSTGRES_MULTIPLE_DATABASES=ai,orthanc
      ports:
          - "5432:5432"
  rabbitmq:
    image: rabbitmq:3.8.5-management
    restart: unless-stopped
    logging:
      driver: "none"
    ports:
      - 5672:5672
      - 15671:15671
      - 15672:15672

  redis:
    image: redis
    restart: unless-stopped
    logging:
      driver: "none"
    ports:
      - 6379:6379

  ui:
    image: tclarke104/med-ai-ui:0.1
    restart: unless-stopped
    ports:
      - "4200:4200"
  server:
    image: tclarke104/med-ai-server:0.1
    restart: unless-stopped
    depends_on: 
      - rabbitmq
      - redis
      - postgres-db
    runtime: nvidia
    ports:
        - 8000:8000
    environment: 
        - ORTHANC_HOST=orthanc
        - REDIS_HOST=redis
        - RABBITMQ_HOST=rabbitmq
        - LOGSTASH_HOST=logstash
        - NVIDIA_VISIBLE_DEVICES=all
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ai-images:/opt/images
  beat:
    image: tclarke104/med-ai-runner:0.1
    depends_on: 
      - rabbitmq
      - redis
      - postgres-db
    restart: unless-stopped
    command: python -m celery -A runner beat -l info
    restart: unless-stopped
    working_dir: /app
    volumes:
    - ai-images:/opt/images
    - /var/run/docker.sock:/var/run/docker.sock
  worker:
    image: tclarke104/med-ai-runner:0.1
    restart: unless-stopped
    depends_on: 
      - rabbitmq
      - redis
      - postgres-db
    command: python -m celery -A runner worker -l info
    restart: unless-stopped
    working_dir: /app
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ai-images:/opt/images
  orthanc:
    restart: unless-stopped
    image: jodogne/orthanc-plugins:1.7.1
    restart: unless-stopped
    volumes:
    - orthanc-volume:/var/lib/orthanc/db
    ports:
    - 4243:4242
    - 8042:8042

  elasticsearch:
    image: tclarke104/elasticsearch:0.1
    restart: unless-stopped
    volumes:
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      discovery.type: single-node

  logstash:
    image: tclarke104/logstash:0.1
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"

  kibana:
    image: tclarke104/kibana:0.1
    ports:
      - "5601:5601"

networks:
  default:
    name: ai-network
volumes:
  ai-images:
    name: ai-images
  postgres-volume:
    name: postgres-volume
  orthanc-volume:
    name: orthanc-volume
  ai-images:
    name: ai-images
  elasticsearch:
    name: elasticsearch